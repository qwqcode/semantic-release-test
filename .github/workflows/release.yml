name: Release Build

on:
  push:
    tags:
      - v*

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - run: git fetch --prune --unshallow --tags -f

      - name: setup go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.19.4'

      # docker `golang-cross` image cache
      # `cache-go-cross-v1-19-4`
      - run: mkdir -p ~/docker-cache
      - name: docker image cache
        id: cache-go-cross-v1-19-4
        uses: actions/cache@v2
        with:
          path: ~/docker-cache
          # Adjust key to meet your cache time requirements e.g.
          # ${{ hashFiles(*) }} can be useful here to invalidate
          # cache on file changes
          key: cache-go-cross-v1-19-4

      - if: steps.cache-go-cross-v1-19-4.outputs.cache-hit != 'true'
        run: |
          docker pull ghcr.io/goreleaser/goreleaser-cross:v1.19.4
          docker save -o ~/docker-cache/golang-cross.tar ghcr.io/goreleaser/goreleaser-cross:v1.19.4
      - if: steps.cache-go-cross-v1-19-4.outputs.cache-hit == 'true'
        run: docker load -i ~/docker-cache/golang-cross.tar

      # build
      - name: setup release environment
        run: |-
          echo 'GITHUB_TOKEN=${{secrets.GITHUB_TOKEN}}' > .release-env
      - name: build and release publish
        run: make release

  # 应该将新的 Changelog 包含在 tag 内，而不是打了 tag 再生成新 Changelog
  changelog-update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: master
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19.4'
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
      - name: Generate changelog
        run: make changelog
      - name: Commit changelog
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add .
          git commit -m "chore: update changelog for ${{ steps.get_version.outputs.VERSION }}"
          git push
