name: Release Build

on:
  push:
    tags:
      - v*

env:
  IMAGE_CACHE_DIR: /tmp/cache/docker-image
  IMAGE_CACHE_KEY: docker-cache-image
  GO_VERSION: '1.19.4'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Git Fetch  
        run: git fetch --prune --unshallow --tags -f

      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      # docker cache
      - name: Docker Image Cache
        id: cache-docker-images-go-cross
        uses: actions/cache@v3
        with:
          path: ${{ env.IMAGE_CACHE_DIR }}/go-cross
          key: ${{ runner.os }}-docker-image-go-cross

      # pull docker image
      - name: Pull Docker Image
        if: steps.cache-docker-images-go-cross.outputs.cache-hit != 'true'
        run: |
          docker pull ghcr.io/goreleaser/goreleaser-cross:v1.19.4
          mkdir -p ${{ env.IMAGE_CACHE_DIR }}/go-cross
          docker save -o ${{ env.IMAGE_CACHE_DIR }}/go-cross/go-cross.tar ghcr.io/goreleaser/goreleaser-cross:v1.19.4

      # restore docker image from cache
      - name: Restore Docker Image from Cache
        if: steps.cache-docker-images-go-cross.outputs.cache-hit == 'true'
        run: docker load -i ${{ env.IMAGE_CACHE_DIR }}/go-cross/go-cross.tar
        
      # pre-build
      - name: Setup Release Environment
        run: |-
          echo 'GITHUB_TOKEN=${{secrets.GITHUB_TOKEN}}' > .release-env

      # build and release
      - name: Build and Release
        run: make release

  # 应该将新的 Changelog 包含在 tag 内，而不是打了 tag 再生成新 Changelog
  # changelog-update:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #         ref: master
  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version: ${{ env.GO_VERSION }}
  #     - name: Get the version
  #       id: get_version
  #       run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
  #     - name: Generate changelog
  #       run: make changelog
  #     - name: Commit changelog
  #       run: |
  #         git config user.name github-actions[bot]
  #         git config user.email 41898282+github-actions[bot]@users.noreply.github.com
  #         git add .
  #         git commit -m "chore: update changelog for ${{ steps.get_version.outputs.VERSION }}"
  #         git push
