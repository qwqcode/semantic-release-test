name: Release Build

on:
  workflow_dispatch:
    inputs:
      semver:
        type: choice
        description: Which version you want to increment?
        options:
          - patch
          - minor
          - major
        required: true
      custom:
        description: 'Custom tag. i.e v1.0.0-rc'
        required: false
        default: ''
  # push:
  #   tags:
  #     - v*

env:
  IMAGE_CACHE_DIR: /tmp/cache/docker-image
  IMAGE_CACHE_KEY: docker-cache-image
  GO_VERSION: '1.19.4'

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Git Fetch  
        run: git fetch --prune --unshallow --tags -f

      - name: Get Current Version number
        run: |
          version="$(git describe --tags --abbrev=0)"
          echo "${version}"
          echo "PREV_VERSION=${version}" >> $GITHUB_ENV

      - name: Set node version to 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org/

      - name: Get Next Version number
        run: |
          if [ -z "${{ github.event.inputs.custom }}" ]; then
            npm install -g semver
            version="v$(semver --increment '${{ github.event.inputs.semver }}' '${{ env.PREV_VERSION }}')"
          else
            version="${{ github.event.inputs.custom }}"
          fi
          echo "${version}"
          echo "NEXT_VERSION=${version}" >> $GITHUB_ENV

      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Generate changelog
        run: make changelog

      - name: Tag and push
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add CHANGELOG.md
          git commit -m "chore: update changelog for ${{ env.NEXT_VERSION }}"
          git tag '${{ env.NEXT_VERSION }}'
          git push origin master '${{ env.NEXT_VERSION }}'

  # release:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - name: Git Fetch  
  #       run: git fetch --prune --unshallow --tags -f

  #     - name: Setup Golang
  #       uses: actions/setup-go@v3
  #       with:
  #         go-version: ${{ env.GO_VERSION }}

  #     # docker cache
  #     - name: Docker Image Cache
  #       id: cache-docker-images-go-cross
  #       uses: actions/cache@v3
  #       with:
  #         path: ${{ env.IMAGE_CACHE_DIR }}/go-cross
  #         key: ${{ runner.os }}-docker-image-go-cross

  #     # pull docker image
  #     - name: Pull Docker Image
  #       if: steps.cache-docker-images-go-cross.outputs.cache-hit != 'true'
  #       run: |
  #         docker pull ghcr.io/goreleaser/goreleaser-cross:v1.19.4
  #         mkdir -p ${{ env.IMAGE_CACHE_DIR }}/go-cross
  #         docker save -o ${{ env.IMAGE_CACHE_DIR }}/go-cross/go-cross.tar ghcr.io/goreleaser/goreleaser-cross:v1.19.4

  #     # restore docker image from cache
  #     - name: Restore Docker Image from Cache
  #       if: steps.cache-docker-images-go-cross.outputs.cache-hit == 'true'
  #       run: docker load -i ${{ env.IMAGE_CACHE_DIR }}/go-cross/go-cross.tar
        
  #     # pre-build
  #     - name: Setup Release Environment
  #       run: |-
  #         echo 'GITHUB_TOKEN=${{secrets.GITHUB_TOKEN}}' > .release-env

  #     # build and release
  #     - name: Build and Release
  #       run: make release

  # 应该将新的 Changelog 包含在 tag 内，而不是打了 tag 再生成新 Changelog
  # changelog-update:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #         ref: master
  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version: ${{ env.GO_VERSION }}
  #     - name: Get the version
  #       id: get_version
  #       run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
  #     - name: Generate changelog
  #       run: make changelog
  #     - name: Commit changelog
  #       run: |
  #         git config user.name github-actions[bot]
  #         git config user.email 41898282+github-actions[bot]@users.noreply.github.com
  #         git add .
  #         git commit -m "chore: update changelog for ${{ steps.get_version.outputs.VERSION }}"
  #         git push
