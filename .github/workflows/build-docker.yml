name: Build Docker
run-name: Build Docker Image and Publish

on:
  repository_dispatch:
    types: [release]

jobs:
  build_publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Checkout latest release tag
        run: |
          git fetch --prune --unshallow --tags -f
          LATEST_TAG=$(git describe --tags --abbrev=0)
          git checkout ${LATEST_TAG}

      # https://github.com/docker/metadata-action
      - name: Gen docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            artalk/artalk-go
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Print Docker meta
        run: |
          echo -e "${{ steps.meta.outputs.tags }}"
          echo -e "${{ steps.meta.outputs.labels }}"

      - name: Get Docker Tags and Labels
        run: |
          VERSION="$(git describe --tags --abbrev=0)"
          COMMIT_HASH="$(git rev-parse --short HEAD)"
          COMMIT_HASH_FULL="$(git rev-parse HEAD)"
          VERS_NO_PATCH="$(cut -d '.' -f 1,2 <<< ${VERSION#v})" # "v1.2.3" -> "1.2"

          IMG_NAME="artalk/artalk-go"
          TAGS="${IMG_NAME}:latest,${IMG_NAME}:${VERSION#v},${IMG_NAME}:${VERS_NO_PATCH},${IMG_NAME}:sha-${COMMIT_HASH}"

          echo "DOCKER_HUB_IMG=${IMG_NAME}" >> $GITHUB_ENV
          echo "DOCKER_TAGS=${TAGS}" >> $GITHUB_ENV
          echo "COMMIT_HASH_FULL=${COMMIT_HASH_FULL}" >> $GITHUB_ENV

      - name: Print Tags and Labels
        run: |
          echo "${{ env.DOCKER_HUB_IMG }}"
          echo "${{ env.DOCKER_TAGS }}"
          echo "${{ env.COMMIT_HASH_FULL }}"

      - name: Comment build info in commit
        uses: actions/github-script@v6
        env:
          STDOUT: "Published new image: `ArtalkJS/Artalk`"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # https://docs.github.com/en/actions/learn-github-actions/contexts
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: '${{ env.COMMIT_HASH_FULL }}', // context.sha
              body: process.env.STDOUT
            })
